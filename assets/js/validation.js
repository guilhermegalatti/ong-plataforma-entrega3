export const Mask={digits:v=>(v||'').replace(/\D/g,''),cpf(v){v=Mask.digits(v).slice(0,11);v=v.replace(/(\d{3})(\d)/,'$1.$2');v=v.replace(/(\d{3})(\d)/,'$1.$2');v=v.replace(/(\d{3})(\d{1,2})$/,'$1-$2');return v},
cep(v){v=Mask.digits(v).slice(0,8);v=v.replace(/(\d{5})(\d{1,3})$/,'$1-$2');return v},
phone(v){v=Mask.digits(v).slice(0,11);if(v.length<=10){v=v.replace(/^(\d{2})(\d)/,'($1) $2').replace(/(\d{4})(\d)/,'$1-$2')}else{v=v.replace(/^(\d{2})(\d)/,'($1) $2').replace(/(\d{5})(\d)/,'$1-$2')}return v}};
export function isValidCPF(cpf){cpf=(cpf||'').replace(/\D/g,'');if(!cpf||cpf.length!==11||/(\d)\1{10}/.test(cpf))return false;let s=0;for(let i=0;i<9;i++)s+=parseInt(cpf[i])*(10-i);let d1=11-(s%11);d1=d1>9?0:d1;s=0;for(let i=0;i<10;i++)s+=parseInt(cpf[i])*(11-i);let d2=11-(s%11);d2=d2>9?0:d2;return d1===parseInt(cpf[9])&&d2===parseInt(cpf[10])}
export function isAdult(b,minYears=16){if(!b)return false;const d=new Date(b);if(isNaN(d.getTime()))return false;const t=new Date();let age=t.getFullYear()-d.getFullYear();const m=t.getMonth()-d.getMonth();if(m<0||(m===0&&t.getDate()<d.getDate()))age--;return age>=minYears}
export const Constraints={name:v=>v&&v.trim().length>=3,email:v=>/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(v||''),cpf:v=>isValidCPF(v),phone:v=>/\(\d{2}\) \d{4,5}-\d{4}/.test(v||''),cep:v=>/\d{5}-\d{3}/.test(v||''),birthdate:v=>isAdult(v,16),street:v=>(v||'').trim().length>=3,city:v=>(v||'').trim().length>=2,state:v=>!!v};
export function attachMasks(form){const id=s=>form.querySelector('#'+s);[['cpf',Mask.cpf],['cep',Mask.cep],['phone',Mask.phone]].forEach(([n,fn])=>{const el=id(n);if(!el)return;el.addEventListener('input',()=>{el.value=fn(el.value)});el.addEventListener('blur',()=>{el.value=fn(el.value)})})}
export function validateForm(form){const data=Object.fromEntries(new FormData(form).entries());const errors=[];Object.entries(Constraints).forEach(([f,fn])=>{if(!fn(data[f]))errors.push(f)});if(data.phone){const m=data.phone.match(/^\((\d{2})\)/);if(m){const ddd=parseInt(m[1],10);if(ddd<11||ddd>99)errors.push('phone')}}return{ok:errors.length===0,data,errors}}